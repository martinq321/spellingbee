(*ToExpression /@ Import["https://raw.githubusercontent.com/martinq321/spellingbee/main/spellingBeeFunctions"]*)
(*https://raw.githubusercontent.com/martinq321/spellingbee/main/spellingBeeFunctions*)
(*https://github.com/martinq321/spellingbee/blob/main/spellingBeeFunctions*)
ClearAll["Global`*"];
Clear[a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z];
qm[lettersT_]:=Module[{fg,sb},fg[string_,letter_]:=Length[Intersection[Characters@string,{ToString[letter]}]];
sb=SortBy[Select[wl,Length[Intersection[Characters@#,ToString/@lettersT]]>3&&Length[Complement[Characters@#,ToString/@lettersT]]==0&&fg[#,First@lettersT]>0&],Length@Characters@#&];{sb,Length@Flatten[Characters/@sb]}];
wl=WordList[];
wr=With[{li=ToLowerCase/@Sort[Flatten[Characters/@wl]]},Drop[Thread[First/@Split@li->N[Length/@Split@li/Length@li]],2]];
wb=Select[wl,Length[DeleteDuplicates[Characters[#]]]==7&&Length@Characters@#>=7&&Length@Intersection[Characters[#],{"a","e","i","o","u"}]<3&];
fc[]:=Characters@RandomChoice[wb];
lt[word_]:=Flatten@With[{lt=With[{li=DeleteDuplicates@Characters@word},RandomSample[li,Length@li]]},ToExpression/@RotateLeft[lt,(Position[#,Min[#]]&[lt/.wr])[[1]]-1]];
gr[letters_,lt1_,pad_]:=Quiet@Module[{wrd,lf},wrd=ToString/@letters;lf=If[lt1==1,lt[wrd],wrd];
Grid[Join[{{}},{{Graphics[{EdgeForm[{White,Thickness[.02]}],GrayLevel[.9],Polygon[CirclePoints[6]+Sqrt[3]ConstantArray[#,6]]&/@(RotationMatrix[Pi/6].#&/@CirclePoints[6]),Hue[0.15,0.85,1],Polygon[CirclePoints[6]],Black,With[{a=ToUpperCase/@ToString/@RandomSample[Rest@lf,Length@lf-1],b=Sqrt[3]RotationMatrix[Pi/6].#&/@CirclePoints[6]},Style[Text[#,#2],30,Bold]&@@@Thread@{a,b}],(*Hue[1,.9,.9],*)Style[Text[ToUpperCase@ToString@First@lf,{0,0}],30,Bold]},ImageSize->300]}},{{
With[{lis=qm[ToExpression/@If[lt1==1,lt[wrd],wrd]]},SortBy[#,Length@Characters@#&]&/@{Complement[lis[[1]],#],#,{lis[[2]]}}&@Select[lis[[1]],Length[Complement[wrd,Characters[#]]]==0&]]
}},{{}}],Alignment->Left,Spacings->{0,pad}]];
gr[letters_]:=gr[letters,0,0];
longlist=ToExpression/@Import["C:\\Users\\martinbelton\\Downloads\\longlist.txt","Data"];
qr[list_]:=qm[ToExpression/@lt[#]]&/@list;
(*longlist=Thread[{wb,qm[ToExpression/@lt[#]]&/@wb}];
Export["C:\\Users\\martinbelton\\Downloads\\longlist.txt",longlist]*)
letterselect[a_,b_]:=Module[{li0,li,li1,li2},
li0=Length/@Drop[Split[Sort@Flatten[ToLowerCase/@Characters/@wl]],2];
li=N[li0/Tr@li0];
li1=Part[li,{1,5,9,15,21}];
li2=Part[li,Complement[Range@26,{1,5,9,15,21}]];
Flatten@{RandomSample[li1->Part[Alphabet[],{1,5,9,15,21}],a],RandomSample[li2->Part[Alphabet[],Complement[Range@26,{1,5,9,15,21}]],b]}
];
letterselect[]:=letterselect[2,5];
keyboard[excludedLetters:{_String...},magnification_?NumberQ]:=Module[{keys},keys={{"Q","W","E","R","T","Y","U","I","O","P"},{"A","S","D","F","G","H","J","K","L"},{"","Z","X","C","V","B","N","M",""}};
keys=Map[Button[#,NotebookWrite[EvaluationNotebook[],#],Background->If[MemberQ[excludedLetters,#],LightGray,White],ImageMargins->1]&,keys,{2}];
Magnify[Framed[#,{FrameStyle->Lighter@Gray,RoundingRadius->5,Background->LightGray}]&@(Grid[keys,Alignment->Center,Background->None,ItemSize->{1.7,1.1}]),magnification]];
llist[letters_,q_]:=SortBy[Flatten[Table[With[{let=ToExpression/@letters,firstletter=If[q==1,ToExpression/@First@lt[StringJoin@letters],ToExpression@First@letters]},Select[DictionaryLookup[{"English",__}]//Select[StringLength@#>3&],Length[Intersection[Characters@#,ToString/@let]]==\[Alpha]&&Length[Complement[Characters@#,ToString/@let]]==0&&Length[Intersection[Characters@#,ToString/@{firstletter}]]==1&]],{\[Alpha],4,12}]],StringLength];
llist[letters_]:=llist[letters,1];
button[letter_,part_]:=
DynamicModule[{a,b,c},
a=part[[1]];b=part[[2]];c=part[[3]];
EventHandler[Style[{EdgeForm[{White,Thickness[.02]}],Polygon[CirclePoints[6]],Text@Style[ToUpperCase@letter,Bold,30]},PolygonBoxOptions->{BaseStyle->Dynamic@If[CurrentValue["MouseOver"],If[CurrentValue[{"MouseButtonTest",1}],Hue[c[[1]],c[[2]],c[[3]]],Hue[b[[1]],b[[2]],b[[3]]]],Hue[a[[1]],a[[2]],a[[3]]]]}],"MouseClicked":>NotebookWrite[EvaluationNotebook[],letter]]];
gr2[letters_,q_]:=With[{lett=ToUpperCase/@RotateLeft[If[q==1,ToString/@lt[StringJoin@letters],letters],1]},Graphics[{Translate[button[#,#3],#2]&@@@Thread[{ToLowerCase/@lett,Join[Sqrt[3] RotationMatrix[Pi/6].#&/@CirclePoints[6],{{0,0}}],
Join[ConstantArray[{{0,0,.9},{0,0,.95},{0,0,.5}},6],{{{0.15,0.85,1},{0.15,0.25,1},{0.15,1,0.9}}}]}]
}]];
gr2[letters_]:=gr2[letters,1];
test[input_,li2_]:=With[{guesses=StringSplit[StringReplace[input,{"\n"->","}],","]},
ToString[Tr[MemberQ[li2,#]/.{True->1,False->0}&/@#&@guesses]]<>"/"<>ToString[Length@li2]<>" words found: "<>ToString[Round[100N[Tr[MemberQ[li2,#]/.{True->StringLength@#,False->0}&/@#]&@guesses/Length@Flatten[Characters/@li2]]]]<>"%"];
inpt[li2_]:=DynamicModule[{input=""},Column[{EventHandler[InputField[Dynamic[input],String,ContinuousAction->True,FieldSize->{40,5}],"ReturnKeyDown":>FrontEndExecute[{NotebookWrite[InputNotebook[],",",After]}]],Dynamic@InputForm[test[input,li2]]}]];
testing[letters_,hardness_]:=Module[{li2},li2=Flatten[Most@Flatten[gr[ToExpression/@letters,0,10][[1,3]],1]];
Grid[{{func1[ToString/@letters,hardness]},{inpt[li2]}},Alignment->Left]];
testing[letters_]:=testing[letters,0];
testingfull[letters_,hardness_]:=Module[{li2},li2=llist[letters,0];
Grid[{{func1[ToString/@letters,hardness]},{inpt[li2]}},Alignment->Left]];
testingfull[letters_]:=testingfull[letters,0];
(*
testing[{b, r, h, e, a, l, t}]
testingfull[{b, r, h, e, a, l, t}] // Timing
Select[li2, Length@Intersection[Characters@#, ToString /@ letters] == 7 &]
*)
